[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

[delayed_gcode DELAYED_OFF]
gcode:
    OFF

[gcode_macro NEVERMORE_ON]
gcode:
  SET_FAN_SPEED FAN=nevermore SPEED=1

[gcode_macro M600]
gcode:
  PAUSE

[gcode_macro NEVERMORE_OFF]
gcode:
  SET_FAN_SPEED FAN=nevermore SPEED=0

[gcode_macro RESETSPEEDS]
gcode:
    M220 S100 ; set speed factor to 100%
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

[gcode_macro PARKCENTER]
gcode:
    ; home if not already homed
    CG28
    SAVE_GCODE_STATE NAME=PARKCENTER
    ; absolute positioning
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z30 F19500
    RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro PARKFRONT]
gcode:
    ; home if not already homed
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    ; absolute positioning
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z30 F19500 
    RESTORE_GCODE_STATE NAME=PARKFRONT

; shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
    M84                ; turn steppers off
    TURN_OFF_HEATERS   ; turn bed / hotend off
    M107               ; turn print cooling fan off
    NEVERMORE_OFF      ; turn off nevermore
    DAYLIGHT_OFF       ; turn light off


[gcode_macro M600]
gcode:
    PAUSE_BASE
    SAFE_LIFT_Z Z=10 F=3000.0
    PARKFRONT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD_FILAMENT
    {% set speed = params.SPEED | default(5 * 60) %}
    {% set purge_distance = params.PURGE | default(75) %}
    G91
    G1 E50 F{speed}
    RESTORE_GCODE_STATE NAME=LOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
    {% set pull_speed = params.PULL_SPEED | default(5 * 60) %}
    {% set pull_distance = ((params.PULL_DISTANCE | default(15)) | float ) * -1 %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% set retract_speed = params.RETRACT_SPEED | default(max_velocity) %}
    {% set retract_distance = ((params.RETRACT_DISTANCE | default(30)) | float) * -1 %}
    G91
    G1 E{pull_distance} F{pull_speed}
    G1 E{retract_distance} F{retract_speed}
    RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}